module ElasticGraph
  class GraphQL
    class Client
      attr_reader name: ::String
      attr_reader source_description: ::String
      def initialize: (name: ::String, source_description: ::String) -> void
      def with: (?name: ::String, ?source_description: ::String) -> Client

      def self.new:
        (name: ::String, source_description: ::String) -> instance
      | (::String, ::String) -> instance

      ANONYMOUS: Client
      ELASTICGRAPH_INTERNAL: Client

      def description: () -> ::String

      interface _Resolver
        def initialize: (::Hash[::String, untyped]) -> void
        def resolve: (HTTPRequest) -> (Client | HTTPResponse)
      end

      class DefaultResolver
        include _Resolver
      end
    end
  end
end
